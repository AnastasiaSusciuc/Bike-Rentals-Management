version: '3.8'
networks:
  app_network:
    driver: bridge

services:
  rabbitmq: # todo move down
    image: rabbitmq:management
    platform: linux/arm64
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network

  auth_service:
    build: ./auth_service
    ports:
      - "5004:5000"
    environment:
      - FLASK_ENV=development
    networks:
      - app_network
    volumes:
      - ./auth_service/instance:/app/instance

  user_service:
    build: ./user_service
    networks:
      - app_network
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
    volumes:
      - ./user_service/instance:/app/instance

  bike_service:
    build: ./bike_service
    networks:
      - app_network
    ports:
      - "5002:5000"
    environment:
      - FLASK_ENV=development
#      - DATABASE_URI=sqlite:////app/instance/bike_rentals.db todo ooooooooo
    volumes:
      - ./bike_service/instance:/app/instance

  bike_service_backup:
    build:
      context: ./bike_service
    container_name: bike_service_backup
    ports:
      - "5003:5000"  # Bike Service Backup on port 5003
    environment:
      - FLASK_ENV=development
      - DATABASE_URI=sqlite:////app/instance/bike_rentals.db
#    restart: on-failure # todo
    networks:
      - app_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network
    depends_on:
      - auth_service
      - user_service
      - bike_service

  zookeeper:
    networks:
      - app_network
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.request.logger=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - app_network
#    restart: on-failure


